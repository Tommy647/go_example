## Create generated files
go/generate: clean
	@protoc --proto_path=. \
		--go_out=.  \
		--go-grpc_out=require_unimplemented_servers=false:. \
		--go-grpc_opt=paths=source_relative  \
		--go_opt=paths=source_relative \
		grpc.proto

## Run the go tests, uncached and with coverage
go/test:
	@-go test ./... --cover -count=1

## Lint the go codebase
go/lint:
	@golangci-lint run --config=.golangci.yaml ./...

# # Go specific requirements
_go/requirements:
	+@-which go &>/dev/null || echo go missing
	@-which golangci-lint &>/dev/null || echo golangci-lint missing: https://golangci-lint.run/usage/install/
	@-which protoc &>/dev/null || echo protoc missing: https://grpc.io/docs/protoc-installation/
	@-which protoc-gen-go |&>/dev/null || echo protoc-gen-go missing:  go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
	@-which protoc-gen-go-grpc &>/dev/null || echo protoc-gen-go-grpc missing:  go install google.golang.org/grpc/cmd/protoc-gen-go-grpc

.PHONY: test lint generate
