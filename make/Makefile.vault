VAULT_ADDR ?= 'http://127.0.0.1:8200'
VAULT_TOKEN ?= $(ROOT_TOKEN)
ROOT_TOKEN ?= 12345678

VAULT_CMD=VAULT_ADDR=$(VAULT_ADDR) VAULT_TOKEN=$(VAULT_TOKEN) vault
ROOT_VAULT_CMD=VAULT_ADDR=$(VAULT_ADDR) VAULT_TOKEN=$(ROOT_TOKEN) vault

## get the web address for our vault instance
vault/ui:
	@echo $(VAULT_ADDR)

## get the vault environment variables call `$(make vault/env)` to add them to your session
vault/env:
	@echo export VAULT_ADDR=$(VAULT_ADDR)
	@echo export VAULT_TOKEN=$(VAULT_TOKEN)

## create a new token
vault/token:
	$(eval VAULT_TOKEN:=$(shell $(ROOT_VAULT_CMD) token create | grep "token\s" | awk '{ print $$2 }'))
	@echo $(VAULT_TOKEN)

## list all our secrets
vault/list:
	@$(VAULT_CMD) kv list secret ||:

## add a secret to vault using KEY=key_name and VALUE=value_string
vault/key/add:
	$(VAULT_CMD) kv put secret/go_example $(KEY)=${VALUE}

## upload self-signed certificates to vault
vault/populate: certs
	@echo Populating Vault with our certificates
	@$(ROOT_VAULT_CMD) kv put secret/certificates "updated_at"="`date`" > /dev/null # need the key to exist
	@for f in $(shell ls certs | grep -v conf); do  $(ROOT_VAULT_CMD) kv patch secret/certificates $${f}=@certs/$${f} > /dev/null ; done

# # Check the vault specific requirements
_vault/requirements:
	@-which vault &>/dev/null || echo vault missing: https://learn.hashicorp.com/tutorials/vault/getting-started-install