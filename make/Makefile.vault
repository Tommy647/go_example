VAULT_ADDR ?= 'http://127.0.0.1:8200'
VAULT_TOKEN ?= $(ROOT_TOKEN)
ROOT_TOKEN ?= 12345678

VAULT_CMD=VAULT_ADDR=$(VAULT_ADDR) VAULT_TOKEN=$(VAULT_TOKEN) vault
ROOT_VAULT_CMD=VAULT_ADDR=$(VAULT_ADDR) VAULT_TOKEN=$(ROOT_TOKEN) vault

MKFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))

## get the web address for our vault instance
vault/ui:
	@echo $(VAULT_ADDR)

## get the vault environment variables call `$(make vault/env)` to add them to your session
vault/env:
	@echo export VAULT_ADDR=$(VAULT_ADDR)
	@echo export VAULT_TOKEN=$(VAULT_TOKEN)

## create a new token
vault/token:
	$(eval TOKEN:=$(shell $(ROOT_VAULT_CMD) token create | grep "token\s" | awk '{ print $$2 }'))
	@echo $(TOKEN)

## list all our secrets
vault/list:
	@$(VAULT_CMD) kv list secret ||:

## add a secret to vault using KEY=key_name and VALUE=value_string
vault/key/add:
	$(VAULT_CMD) kv put secret/go_example $(KEY)=${VALUE}

vault/test:
	$(MAKE) -s -f $(MKFILE_PATH) vault/key/add KEY="tommy" VALUE="Smith"

## upload self-signed certificates to vault
vault/populate: certs vault/add_k8s_auth
	$(ROOT_VAULT_CMD) kv put secret/certificates "updated_at"="`date`" # need the key to exist
	for f in $(shell ls certs | grep -v conf); do  $(ROOT_VAULT_CMD) kv patch secret/certificates $${f}=@certs/$${f}; done

vault/add_k8s_auth:
	curl --insecure --header "X-Vault-Token:$(ROOT_TOKEN)" --request POST --data '{"type":"kubernetes","description":"kubernetes auth"}' $(VAULT_ADDR)/v1/sys/auth/kubernetes